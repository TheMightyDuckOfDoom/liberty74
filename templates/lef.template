# Copyright 2024 Tobias Senti
# Solderpad Hardware License, Version 0.51, see LICENSE for details.
# SPDX-License-Identifier: SHL-0.51

# ${stamp}

VERSION 5.7 ;
BUSBITCHARS "<>" ;
DIVIDERCHAR "/" ;

% for cell in cells:
MACRO ${cell["name"]}
  % if 'is_std_cell' in footprints[cell["footprint"]] and not footprints[cell["footprint"]]['is_std_cell']:
  CLASS BLOCK ;
  % else:
  CLASS CORE ;
  % endif
  ORIGIN 0 0 ;
  SIZE ${footprints[cell["footprint"]]["cell_width"]} BY ${footprints[cell["footprint"]]["cell_height"]} ;
  % if "tapcell" in cell and cell["tapcell"]:
  SYMMETRY R90 X ;
  % else:
  SYMMETRY R90 ;
  % endif
  % if 'is_std_cell' not in footprints[cell["footprint"]] or ('is_std_cell' not in footprints[cell["footprint"]] and footprints[cell["footprint"]]['is_std_cell']):
  SITE CoreSite ;
  % endif

  % if 'internal_pins' in cell or 'not_connected' in cell:
  OBS
    % if 'interal_pins' in cell:
      % for pin in cell['internal_pins']:
${footprints[cell['footprint']]['pin_lef_template'][pin]}
      % endfor
      % if 'internal_connections_lef' in cell:
        % for ic in cell['internal_connections_lef']:
${ic}
        % endfor
      % endif
    % endif
    % if 'not_connected' in cell:
      % for pin in cell['not_connected']:
${footprints[cell['footprint']]['pin_lef_template'][pin['pin_number']]}
      % endfor
    % endif
  END

  % endif
  % if 'inputs' in cell:
    % for pin in cell["inputs"]:
      % if "bus_name" in pin:
        % for i in range(0, bus_types[pin["bus_type"]]["width"]):
  PIN ${pin["bus_name"]}[${i + min(bus_types[pin["bus_type"]]["from"], bus_types[pin["bus_type"]]["to"])}]
    DIRECTION INPUT ;
    USE SIGNAL ;
    PORT
          % if "use_power_pin_template" in pin and pin["use_power_pin_template"]:
${footprints[cell["footprint"]]["power_pin_lef_template"][pin["bus_pins"][i]]}
          % else:
${footprints[cell["footprint"]]["pin_lef_template"][pin["bus_pins"][i]]}
          % endif
    END
  END ${pin["bus_name"]}[${i + min(bus_types[pin["bus_type"]]["from"], bus_types[pin["bus_type"]]["to"])}]
        % endfor
      % else:
  PIN ${pin["name"]}
    DIRECTION INPUT ;
    USE SIGNAL ;
    PORT
        % if "use_power_pin_template" in pin and pin["use_power_pin_template"]:
${footprints[cell["footprint"]]["power_pin_lef_template"][pin["pin_number"]]}
        % else:
${footprints[cell["footprint"]]["pin_lef_template"][pin["pin_number"]]}
        % endif
    END
  END ${pin["name"]}
      % endif
    % endfor
  % endif
  % if 'inouts' in cell:
    % for pin in cell["inouts"]:
      % if "bus_name" in pin:
        % for i in range(0, bus_types[pin["bus_type"]]["width"]):
  PIN ${pin["bus_name"]}[${i + min(bus_types[pin["bus_type"]]["from"], bus_types[pin["bus_type"]]["to"])}]
    DIRECTION INOUT ;
    USE SIGNAL ;
    PORT
          % if "use_power_pin_template" in pin and pin["use_power_pin_template"]:
${footprints[cell["footprint"]]["power_pin_lef_template"][pin["bus_pins"][i]]}
          % else:
${footprints[cell["footprint"]]["pin_lef_template"][pin["bus_pins"][i]]}
          % endif
    END
  END ${pin["bus_name"]}[${i + min(bus_types[pin["bus_type"]]["from"], bus_types[pin["bus_type"]]["to"])}]
        % endfor
      % else:
  PIN ${pin["name"]}
    DIRECTION INOUT ;
    USE SIGNAL ;
    PORT
        % if "use_power_pin_template" in pin and pin["use_power_pin_template"]:
${footprints[cell["footprint"]]["power_pin_lef_template"][pin["pin_number"]]}
        % else:
${footprints[cell["footprint"]]["pin_lef_template"][pin["pin_number"]]}
        % endif
    END
  END ${pin["name"]}
      % endif
    % endfor
  % endif
  % if 'outputs' in cell:
    % for pin in cell["outputs"]:
      % if "bus_name" in pin:
        % for i in range(0, bus_types[pin["bus_type"]]["width"]):
  PIN ${pin["bus_name"]}[${i + min(bus_types[pin["bus_type"]]["from"], bus_types[pin["bus_type"]]["to"])}]
    DIRECTION OUTPUT ;
    USE SIGNAL ;
    PORT
          % if "use_power_pin_template" in pin and pin["use_power_pin_template"]:
${footprints[cell["footprint"]]["power_pin_lef_template"][pin["bus_pins"][i]]}
          % else:
${footprints[cell["footprint"]]["pin_lef_template"][pin["bus_pins"][i]]}
          % endif
    END
  END ${pin["bus_name"]}[${i + min(bus_types[pin["bus_type"]]["from"], bus_types[pin["bus_type"]]["to"])}]
        % endfor
      % else:
  PIN ${pin["name"]}
    DIRECTION OUTPUT ;
    USE SIGNAL ;
    PORT
        % if "pin_numbers" in pin:
          % for i in range(0, len(pin['pin_numbers'])):
            % if "use_power_pin_template" in pin and pin["use_power_pin_template"]:
${footprints[cell["footprint"]]["power_pin_lef_template"][pin["pin_numbers"][i]]}
            % else:
${footprints[cell["footprint"]]["pin_lef_template"][pin["pin_numbers"][i]]}
            % endif
          % endfor
        % else:
          % if "use_power_pin_template" in pin and pin["use_power_pin_template"]:
${footprints[cell["footprint"]]["power_pin_lef_template"][pin["pin_number"]]}
          % else:
${footprints[cell["footprint"]]["pin_lef_template"][pin["pin_number"]]}
          % endif
        % endif
    END
  END ${pin["name"]}
      % endif
    % endfor
  % endif
  % if 'power' in cell:
    % for pin in cell["power"]:
  PIN ${pin["name"]}
    DIRECTION INOUT ;
      % if pin["function"] == "ground":
    USE GROUND ;
      % else:
    USE POWER ;
      % endif
    ##SHAPE ABUTMENT ;
    PORT
      % if pin["function"] == "ground":
${footprints[cell["footprint"]]["power_pin_lef_template"][pin["pin_number"] * 2 - 1]}
      % else:
${footprints[cell["footprint"]]["power_pin_lef_template"][pin["pin_number"] * 2]}
      % endif
    END
  END ${pin["name"]}
    % endfor
  % endif
END ${cell["name"]}

% endfor
